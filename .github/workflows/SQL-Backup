name: Backup SQL Server Database

on:
  push:
    branches:
      - main  # Trigger workflow when changes are pushed to the main branch

jobs:
  backup_database:
    runs-on: ubuntu-latest  # This can be 'self-hosted' if using a self-hosted runner

    steps:
      # Step 1: Install sqlcmd tool (if not pre-installed on the runner)
      - name: Install sqlcmd tool
        run: |
          curl https://packages.microsoft.com/keys/microsoft.asc | sudo apt-key add -
          curl https://packages.microsoft.com/mssql-release/debian/9/prod.list | sudo tee /etc/apt/sources.list.d/mssql-release.list
          sudo apt-get update
          sudo ACCEPT_EULA=Y apt-get install -y msodbcsql17 unixodbc-dev
          sudo apt-get install -y mssql-tools

      # Step 2: Checkout the repository code (if required)
      - name: Checkout code
        uses: actions/checkout@v2  # This is optional, you can remove if not needed

      # Step 3: Backup SQL Server Database
      - name: Backup SQL Server Database
        run: |
          # Connect to SQL Server and perform a backup of 'mydb'
          sqlcmd -S localhost -U ${{ secrets.DB_USER }} -P ${{ secrets.DB_PASSWORD }} -Q "BACKUP DATABASE [mydb] TO DISK = N'/tmp/mydb_backup.bak'"

      # Step 4: Upload backup to GitHub artifact storage
      - name: Upload backup as an artifact
        uses: actions/upload-artifact@v3
        with:
          name: db-backup
          path: /tmp/mydb_backup.bak
